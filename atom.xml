<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xun</title>
  
  <subtitle>Seek Water</subtitle>
  <link href="https://estelledc.github.io/atom.xml" rel="self"/>
  
  <link href="https://estelledc.github.io/"/>
  <updated>2024-11-17T01:12:35.887Z</updated>
  <id>https://estelledc.github.io/</id>
  
  <author>
    <name>The man seeking water and mountain</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>claimRSS</title>
    <link href="https://estelledc.github.io/2024/11/17/claimRSS/"/>
    <id>https://estelledc.github.io/2024/11/17/claimRSS/</id>
    <published>2024-11-17T01:12:23.000Z</published>
    <updated>2024-11-17T01:12:35.887Z</updated>
    
    <content type="html"><![CDATA[<p>This message is used to verify that this feed (feedId:80778812612148224) belongs to me (userId:69372057953172480). Join me in enjoying the next generation information browser <a href="https://follow.is/">https://follow.is</a>.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;This message is used to verify that this feed (feedId:80778812612148224) belongs to me (userId:69372057953172480). Join me in enjoying th</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>the 1 day for JS</title>
    <link href="https://estelledc.github.io/2024/11/15/the-1-day-for-JS/"/>
    <id>https://estelledc.github.io/2024/11/15/the-1-day-for-JS/</id>
    <published>2024-11-15T10:49:01.000Z</published>
    <updated>2024-11-15T10:53:20.728Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Basic-but-vague"><a href="#Basic-but-vague" class="headerlink" title="Basic but vague"></a>Basic but vague</h2><h3 id="1-typeof-null"><a href="#1-typeof-null" class="headerlink" title="1.typeof null"></a>1.typeof null</h3><blockquote><p>object</p></blockquote><p>This is a legacy issue, null is not actually an object.</p><h3 id="2-”-”-“-”"><a href="#2-”-”-“-”" class="headerlink" title="2.”&#x3D;&#x3D;” &amp; “&#x3D;&#x3D;&#x3D;”"></a>2.”&#x3D;&#x3D;” &amp; “&#x3D;&#x3D;&#x3D;”</h3><ul><li><p>former: loose</p></li><li><p>latter: strict</p></li></ul><blockquote><p>console.log(18 &#x3D;&#x3D; ‘18’); &#x2F;&#x2F; true</p><p>console.log(18 &#x3D;&#x3D;&#x3D; ‘18’); &#x2F;&#x2F; false</p></blockquote><h3 id="3-typeof-NaN"><a href="#3-typeof-NaN" class="headerlink" title="3.typeof NaN"></a>3.typeof NaN</h3><blockquote><p>number</p></blockquote><h3 id="4-String-concatenation-of-the-operator"><a href="#4-String-concatenation-of-the-operator" class="headerlink" title="4.String concatenation of the + operator"></a>4.String concatenation of the + operator</h3><div class="noise-code-block" style="--code-block-max-height:inherit;"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;5&#x27;</span> + <span class="number">5</span>);<span class="comment">//&quot;55&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;5&#x27;</span> - <span class="number">5</span>);<span class="comment">//0</span></span><br></pre></td></tr></table></figure></div><p>“+” is different from “-“ in this field.</p><h3 id="5-”undefined”-“null”"><a href="#5-”undefined”-“null”" class="headerlink" title="5.”undefined” &amp; “null”"></a>5.”undefined” &amp; “null”</h3><ul><li><p>former: declared but not assigned</p></li><li><p>latter: declared and assigned a null value</p></li></ul><h3 id="6-NaN-NaN"><a href="#6-NaN-NaN" class="headerlink" title="6.NaN &#x3D;&#x3D;&#x3D; NaN ?"></a>6.NaN &#x3D;&#x3D;&#x3D; NaN ?</h3><p>amazingly wrong</p><p>we need to use a func called “isNaN()”</p><h3 id="7-boolean-about-“0”-“-“"><a href="#7-boolean-about-“0”-“-“" class="headerlink" title="7.boolean about “0” &amp; “ “"></a>7.boolean about “0” &amp; “ “</h3><p>both false</p><h2 id="Challenge"><a href="#Challenge" class="headerlink" title="Challenge"></a>Challenge</h2><ul><li>declare function prompt(message?: string, _default?: string): string | null;</li></ul><div class="noise-code-block" style="--code-block-max-height:inherit;"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// const favourite = Number(prompt(&quot;What&#x27;s your favourite number?&quot;));</span></span><br><span class="line"><span class="comment">// console.log(typeof favourite); </span></span><br><span class="line"><span class="comment">// // &quot;number&quot; if input is a valid number</span></span><br><span class="line"><span class="comment">// // otherwise &quot;number&quot; with value NaN1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// I can not run above code in VScode, so I find another way follow.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> readline = <span class="built_in">require</span>(<span class="string">&#x27;readline&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> rl = readline.<span class="title function_">createInterface</span>(&#123;</span><br><span class="line">  <span class="attr">input</span>: process.<span class="property">stdin</span>,</span><br><span class="line">  <span class="attr">output</span>: process.<span class="property">stdout</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">rl.<span class="title function_">question</span>(<span class="string">&quot;What&#x27;s your favourite number? &quot;</span>, <span class="function">(<span class="params">answer</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> favourite = <span class="title class_">Number</span>(answer);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> favourite); </span><br><span class="line">  <span class="comment">// &quot;number&quot; if input is a valid number</span></span><br><span class="line">  <span class="comment">// otherwise &quot;number&quot; with value NaN</span></span><br><span class="line">  rl.<span class="title function_">close</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
    <summary type="html">some basic but vague question and a challenge I have experienced during today&#39;s study</summary>
    
    
    
    
    <category term="JS" scheme="https://estelledc.github.io/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>JS&amp;node.js_study_plan_2weeks</title>
    <link href="https://estelledc.github.io/2024/11/14/JS-node-js-study-plan/"/>
    <id>https://estelledc.github.io/2024/11/14/JS-node-js-study-plan/</id>
    <published>2024-11-14T06:26:42.000Z</published>
    <updated>2024-11-14T13:59:37.428Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Sum"><a href="#Sum" class="headerlink" title="Sum"></a>Sum</h2><p>1.<a href="https://wangdoc.com/javascript/">JavaScript 教程 - 网道 (wangdoc.com)</a></p><p>2.<a href="https://www.runoob.com/nodejs/nodejs-tutorial.html">Node.js 教程 | 菜鸟教程 (runoob.com)</a></p><h2 id="create-by-ChatGPT"><a href="#create-by-ChatGPT" class="headerlink" title="create by ChatGPT"></a>create by ChatGPT</h2><p>Here’s a 2-week study plan to learn the basics of JavaScript and Node.js. This plan assumes you’re starting from scratch and want a solid foundation in both front-end JavaScript (which is the core language) and back-end Node.js (which builds on JavaScript for server-side development).</p><h3 id="Week-1-JavaScript-Basics"><a href="#Week-1-JavaScript-Basics" class="headerlink" title="Week 1: JavaScript Basics"></a><strong>Week 1: JavaScript Basics</strong></h3><p>In the first week, you’ll focus on learning the core concepts of JavaScript, which is essential before moving to Node.js.</p><hr><h4 id="Day-1-Introduction-to-JavaScript"><a href="#Day-1-Introduction-to-JavaScript" class="headerlink" title="Day 1: Introduction to JavaScript"></a><strong>Day 1: Introduction to JavaScript</strong></h4><ul><li><strong>What is JavaScript?</strong> Learn its role in web development.</li><li><strong>Setting up a basic JavaScript environment</strong> (using browser developer tools, or an online IDE like Replit or CodePen).</li><li><strong>First JavaScript program:</strong> <code>console.log(&quot;Hello, world!&quot;);</code></li><li><strong>Basic Syntax:</strong><ul><li>Variables: <code>let</code>, <code>const</code>, <code>var</code></li><li>Data types: <code>string</code>, <code>number</code>, <code>boolean</code>, <code>null</code>, <code>undefined</code>, <code>object</code>, <code>array</code></li></ul></li></ul><p>Resources:</p><ul><li>MDN JavaScript Guide: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide</a></li></ul><hr><h4 id="Day-2-Control-Structures-Functions"><a href="#Day-2-Control-Structures-Functions" class="headerlink" title="Day 2: Control Structures &amp; Functions"></a><strong>Day 2: Control Structures &amp; Functions</strong></h4><ul><li><strong>Conditionals:</strong> <code>if</code>, <code>else</code>, <code>else if</code>, <code>switch</code></li><li><strong>Loops:</strong> <code>for</code>, <code>while</code>, <code>do while</code></li><li><strong>Functions:</strong> <ul><li>Function declaration</li><li>Function expressions</li><li>Arrow functions</li><li>Parameters and return values</li></ul></li></ul><p>Resources:</p><ul><li>FreeCodeCamp JavaScript basics: <a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/">https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/</a></li></ul><hr><h4 id="Day-3-Arrays-Objects"><a href="#Day-3-Arrays-Objects" class="headerlink" title="Day 3: Arrays &amp; Objects"></a><strong>Day 3: Arrays &amp; Objects</strong></h4><ul><li><strong>Arrays:</strong> Creation, methods (<code>push</code>, <code>pop</code>, <code>shift</code>, <code>unshift</code>, <code>map</code>, <code>filter</code>, <code>reduce</code>)</li><li><strong>Objects:</strong> Creation, accessing properties, methods, <code>for...in</code> loops</li><li><strong>Array and object destructuring</strong></li></ul><p>Resources:</p><ul><li>MDN Arrays: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array</a></li><li>MDN Objects: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects</a></li></ul><hr><h4 id="Day-4-Understanding-Scope-Closures"><a href="#Day-4-Understanding-Scope-Closures" class="headerlink" title="Day 4: Understanding Scope &amp; Closures"></a><strong>Day 4: Understanding Scope &amp; Closures</strong></h4><ul><li><strong>Scope:</strong> Global scope vs. local scope</li><li><strong>Function scope vs. block scope</strong></li><li><strong>Closures:</strong> How closures work in JavaScript</li></ul><p>Resources:</p><ul><li>JavaScript.info - Closures: <a href="https://javascript.info/closures">https://javascript.info/closures</a></li></ul><hr><h4 id="Day-5-Asynchronous-JavaScript-Part-1"><a href="#Day-5-Asynchronous-JavaScript-Part-1" class="headerlink" title="Day 5: Asynchronous JavaScript (Part 1)"></a><strong>Day 5: Asynchronous JavaScript (Part 1)</strong></h4><ul><li><strong>Callbacks</strong>: Introduction to callback functions</li><li><strong>setTimeout and setInterval</strong>: Handling timers</li><li><strong>Error handling with <code>try/catch</code></strong></li></ul><p>Resources:</p><ul><li>MDN Asynchronous Programming: <a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous">https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous</a></li></ul><hr><h4 id="Day-6-Asynchronous-JavaScript-Part-2"><a href="#Day-6-Asynchronous-JavaScript-Part-2" class="headerlink" title="Day 6: Asynchronous JavaScript (Part 2)"></a><strong>Day 6: Asynchronous JavaScript (Part 2)</strong></h4><ul><li><strong>Promises</strong>: What are promises? How do they work?</li><li><strong>Chaining promises</strong></li><li><strong>Async&#x2F;Await</strong>: Simplifying promise handling with async functions</li></ul><p>Resources:</p><ul><li>MDN Promises: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises</a></li><li>Async&#x2F;Await Tutorial: <a href="https://javascript.info/async-await">https://javascript.info/async-await</a></li></ul><hr><h4 id="Day-7-Review-Practice"><a href="#Day-7-Review-Practice" class="headerlink" title="Day 7: Review &amp; Practice"></a><strong>Day 7: Review &amp; Practice</strong></h4><ul><li>Go over everything you’ve learned so far.</li><li>Build a small project: Create a simple calculator, a to-do list app, or a number guessing game.</li><li>Try solving problems on platforms like <strong>LeetCode</strong>, <strong>CodeWars</strong>, or <strong>HackerRank</strong>.</li></ul><hr><h3 id="Week-2-Introduction-to-Node-js"><a href="#Week-2-Introduction-to-Node-js" class="headerlink" title="Week 2: Introduction to Node.js"></a><strong>Week 2: Introduction to Node.js</strong></h3><p>Now that you have a good grasp of JavaScript basics, it’s time to dive into Node.js. This week will focus on setting up and using Node.js for server-side JavaScript development.</p><hr><h4 id="Day-8-Introduction-to-Node-js"><a href="#Day-8-Introduction-to-Node-js" class="headerlink" title="Day 8: Introduction to Node.js"></a><strong>Day 8: Introduction to Node.js</strong></h4><ul><li><strong>What is Node.js?</strong> Understand the concept of server-side JavaScript.</li><li><strong>Install Node.js</strong>: Download and install from <a href="https://nodejs.org/">nodejs.org</a>.</li><li><strong>Your first Node.js app</strong>: Create a simple “Hello, World!” app using <code>console.log</code>.</li><li><strong>Understanding <code>require</code></strong> and <code>module.exports</code>.</li></ul><p>Resources:</p><ul><li>Node.js Docs: <a href="https://nodejs.org/en/docs/">https://nodejs.org/en/docs/</a></li></ul><hr><h4 id="Day-9-Working-with-the-File-System"><a href="#Day-9-Working-with-the-File-System" class="headerlink" title="Day 9: Working with the File System"></a><strong>Day 9: Working with the File System</strong></h4><ul><li><strong>The <code>fs</code> module</strong>: Read and write files (<code>fs.readFile</code>, <code>fs.writeFile</code>)</li><li><strong>The <code>path</code> module</strong>: Work with file and directory paths</li></ul><p>Resources:</p><ul><li>Node.js File System Docs: <a href="https://nodejs.org/dist/latest-v16.x/docs/api/fs.html">https://nodejs.org/dist/latest-v16.x/docs/api/fs.html</a></li></ul><hr><h4 id="Day-10-HTTP-Module-Building-a-Basic-Server"><a href="#Day-10-HTTP-Module-Building-a-Basic-Server" class="headerlink" title="Day 10: HTTP Module &amp; Building a Basic Server"></a><strong>Day 10: HTTP Module &amp; Building a Basic Server</strong></h4><ul><li><strong>The <code>http</code> module</strong>: Create a simple HTTP server using <code>http.createServer()</code>.</li><li><strong>Request and Response objects</strong>: Handle GET and POST requests.</li></ul><p>Resources:</p><ul><li>Node.js HTTP Docs: <a href="https://nodejs.org/dist/latest-v16.x/docs/api/http.html">https://nodejs.org/dist/latest-v16.x/docs/api/http.html</a></li></ul><hr><h4 id="Day-11-Introduction-to-Express-js"><a href="#Day-11-Introduction-to-Express-js" class="headerlink" title="Day 11: Introduction to Express.js"></a><strong>Day 11: Introduction to Express.js</strong></h4><ul><li><strong>What is Express.js?</strong> Learn about Express as a web framework for Node.js.</li><li><strong>Set up Express</strong>: Install via npm (<code>npm install express</code>).</li><li><strong>Create a simple Express server</strong>: Set up routes and handle basic HTTP methods (GET, POST).</li></ul><p>Resources:</p><ul><li>Express.js Docs: <a href="https://expressjs.com/en/starter/installing.html">https://expressjs.com/en/starter/installing.html</a></li></ul><hr><h4 id="Day-12-Working-with-APIs-JSON"><a href="#Day-12-Working-with-APIs-JSON" class="headerlink" title="Day 12: Working with APIs &amp; JSON"></a><strong>Day 12: Working with APIs &amp; JSON</strong></h4><ul><li><strong>Handling JSON</strong>: Sending and receiving JSON in Express.</li><li><strong>Creating RESTful routes</strong>: Basic CRUD (Create, Read, Update, Delete) operations.</li><li><strong>Using <code>body-parser</code></strong>: Parse incoming request bodies.</li></ul><p>Resources:</p><ul><li>Express.js Routing: <a href="https://expressjs.com/en/starter/basic-routing.html">https://expressjs.com/en/starter/basic-routing.html</a></li><li>Node.js Body Parser: <a href="https://www.npmjs.com/package/body-parser">https://www.npmjs.com/package/body-parser</a></li></ul><hr><h4 id="Day-13-Databases-with-Node-js"><a href="#Day-13-Databases-with-Node-js" class="headerlink" title="Day 13: Databases with Node.js"></a><strong>Day 13: Databases with Node.js</strong></h4><ul><li><strong>Introduction to MongoDB</strong>: Setting up a simple MongoDB database.</li><li><strong>Install and use MongoDB</strong> in a Node.js app using <code>mongoose</code> for object data modeling (ODM).</li><li><strong>Basic CRUD operations</strong> with MongoDB.</li></ul><p>Resources:</p><ul><li>MongoDB Node.js Driver Docs: <a href="https://www.mongodb.com/docs/drivers/node/current/">https://www.mongodb.com/docs/drivers/node/current/</a></li><li>Mongoose Docs: <a href="https://mongoosejs.com/docs/">https://mongoosejs.com/docs/</a></li></ul><hr><h4 id="Day-14-Review-Build-a-Simple-Project"><a href="#Day-14-Review-Build-a-Simple-Project" class="headerlink" title="Day 14: Review &amp; Build a Simple Project"></a><strong>Day 14: Review &amp; Build a Simple Project</strong></h4><ul><li><strong>Review</strong>: Go over the key topics you’ve learned in both JavaScript and Node.js.</li><li><strong>Build a simple project</strong> that combines everything you’ve learned. For example:<ul><li>A RESTful API with Express and MongoDB.</li><li>A chat application using websockets (Socket.io).</li></ul></li></ul><p>Resources:</p><ul><li>Full-Stack Tutorial (JS, Node, Express, MongoDB): <a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs">https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs</a></li></ul><hr><h3 id="General-Tips"><a href="#General-Tips" class="headerlink" title="General Tips:"></a><strong>General Tips:</strong></h3><ul><li><strong>Practice daily</strong>: Code regularly to reinforce learning.</li><li><strong>Debugging</strong>: Use <code>console.log()</code> and debugging tools to understand how your code is behaving.</li><li><strong>Community</strong>: Join JavaScript and Node.js communities on platforms like StackOverflow, Reddit, or Discord for help when stuck.</li></ul><p>By following this plan, you should have a solid understanding of both JavaScript and Node.js by the end of 2 weeks. You can then build upon this foundation with more advanced topics!</p>]]></content>
    
    
    <summary type="html">I use ChatGPT to create a plan for me</summary>
    
    
    
    
    <category term="plan" scheme="https://estelledc.github.io/tags/plan/"/>
    
    <category term="JS" scheme="https://estelledc.github.io/tags/JS/"/>
    
    <category term="node.js" scheme="https://estelledc.github.io/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title>end before and begin now</title>
    <link href="https://estelledc.github.io/2024/11/14/end%20before%20and%20begin%20now/"/>
    <id>https://estelledc.github.io/2024/11/14/end%20before%20and%20begin%20now/</id>
    <published>2024-11-14T06:00:00.000Z</published>
    <updated>2024-11-14T06:14:30.426Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Foreword"><a href="#Foreword" class="headerlink" title="Foreword"></a>Foreword</h2><p>After 2 hours, I finally end the building of my blog and I have seen my blog in the preview. It is such an amazing thing to express my thought with it to others.</p><h2 id="Difficulty"><a href="#Difficulty" class="headerlink" title="Difficulty"></a>Difficulty</h2><p>I spent most of my 2-hours-time on my “About” page.</p><p>But I finally succeeded half.</p><p>P.S. The update in windows made me suffer many privations because of the <strong>Set-ExecutionPolicy RemoteSigned</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Foreword&quot;&gt;&lt;a href=&quot;#Foreword&quot; class=&quot;headerlink&quot; title=&quot;Foreword&quot;&gt;&lt;/a&gt;Foreword&lt;/h2&gt;&lt;p&gt;After 2 hours, I finally end the building of m</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://estelledc.github.io/2024/11/14/hello-world/"/>
    <id>https://estelledc.github.io/2024/11/14/hello-world/</id>
    <published>2024-11-14T01:07:20.999Z</published>
    <updated>2024-11-14T01:07:20.999Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="noise-code-block" style="--code-block-max-height:inherit;"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="noise-code-block" style="--code-block-max-height:inherit;"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="noise-code-block" style="--code-block-max-height:inherit;"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="noise-code-block" style="--code-block-max-height:inherit;"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
